rm(list=ls())
os <- .Platform$OS.type
if (os=="windows") {
lib_path <- "C:/Users/USER/Documents/R/win-library/3.3"
j<- "J:/"
h<-"H:/"
} else {
lib_path <- "/share/local/R-3.1.2/lib64/R/library"
j<- "/home/j/"
h<-"/homes/USER/"
}
date<-gsub("-", "_", Sys.Date())
library(ggplot2)
library(data.table)
output_dir <- "H:/Sanofi Hypertension project/" ## bz: added for easy saving of plots to H drive
################### PATHS AND ARGS #########################################
######################################################
##args
me<-"sbp"
##conditionals
if(me=="sbp"){
cutoff<-112.5
upper<-300
lower<-50
me_dis<-"hyperchol"
mething<-me
v<-3
width<-5
rei_id<-107
sd_meid<-15788
}
if(me=="chl"){
cutoff<-3
upper<-16
lower<-.2
me_dis<-"hypertension"
mething<-"cholesterol"
v<-1
width<-0.2
rei_id<-106
sd_meid<-15789
}
micro_path<-paste0(j, "WORK/05_risk/ensemble/fit/microdata/metab_", mething, ".csv")  ##sy: microdata stored for dist fitting
weights_path<-paste0(j, "WORK/05_risk/ensemble/fit/aggregate_weights/metab_", mething, "/v", v,"/metab_", mething,"_global_weights.csv")
plot_output<-paste0(output_dir, me, "_global_weights_by_source.pdf") ## bz: changed to save to H drive Sanofi folder
central<-paste0(j, "temp/central_comp/libraries/current/r/")
################### SCRIPTS #########################################
######################################################
source(paste0(j, "Project/CVD_Roth/GBD2016/Risks/exposure/code/get_recent.R"))  ##sy: my function
# source(paste0(j, "WORK/05_risk/ensemble/source/ihmeDistFit.R"))
# source(paste0(j,"/WORK/05_risk/ensemble/source/ihmeDistList.R"))
# source(paste0(j,"/WORK/05_risk/ensemble/source/create_dist_weights_parallel_function.R"))
source(paste0(central, "get_location_metadata.R"))
source(paste0(central, "get_draws.R"))
source(paste0(central, "get_model_results.R"))
source(paste0(j, "Project/CVD_Roth/GBD2016/Risks/exposure/code/job_hold.R"))
source(paste0(j, "temp/USER/repos/cvd-risk-factors/utility/get_microdata.R"))
#source(paste0(j, "WORK/05_risk/ensemble/fit/code/fit_submit.r"))
source(paste0(j, "WORK/05_risk/ensemble/source/eKS_parallel.R"))
source(paste0(j,"/WORK/05_risk/ensemble/source/ihmeDistList.R"))
source("C:/Users/USER/Downloads/get_edensity.R")  ## bz: got this updated version from Stan August 25
################### GET DATA #########################################
######################################################
data<-fread(micro_path)
weights<-fread(weights_path)
##sy:reformat weights to just be one row (it was just a repeition before)
weights<-weights[, c("location_id", "year_id", "age_group_id"):=NULL]
locs<-get_location_metadata(version_id=149)
################### FIT GLOBAL #########################################
######################################################
dlist <- c(classA, classB, classM)
library(rio)
x<-weights[sex_id==1][1]  ##sy: just take the first row ## bz: changed "sex" to 1 for testing purposes
x[["sex_id"]]<-NULL
wt_names<-names(x)
x<-as.numeric(x)
names(x)<-wt_names
##sy: setup data
data.s<-data[sex_id==1] ## bz: changed "sex" to 1 for testing purposes
xmin<-min(data.s$data)
xmax<-max(data.s$data)
dens<-get_edensity(weights=x, .min=xmin, .max=xmax, mean=mean(data.s$data), sd=sd(data.s$data))
dens<-data.frame(dens) ## bz: changed to data.frame type for testing purposes
colnames(dens) <- "y_dens" ## bz: try renaming the dens column to something else, so that it doesn't have the same name as the data.frame object itself
p<-ggplot()+
geom_histogram(data=data.s, aes(x=data, y=..density..), fill="white", color="black", binwidth=width)+
geom_line(data=dens, aes(x=seq(xmin,xmax,length=1000), y=y_dens), color="blue")+ ## bz: changed "length" to 1 for testing purposes
ggtitle("Aggregated distribution over all data, sex_id ", 1)+ ## bz: changed "sex" to 1 for testing purposes
theme_classic()
print(p)
pdf(file=plot_output)
for(sex in unique(weights$sex_id)){
##sy: setup weights
x<-weights[sex_id==sex][1]  ##sy: just take the first row
x[["sex_id"]]<-NULL
wt_names<-names(x)
x<-as.numeric(x)
names(x)<-wt_names
##sy: setup data
data.s<-data[sex_id==sex]
xmin<-min(data.s$data)
xmax<-max(data.s$data)
dens<-get_edensity(weights=x, .min=xmin, .max=xmax, mean=mean(data.s$data), sd=sd(data.s$data))
dens<-data.frame(dens) ## bz: changed to data.frame type for testing purposes
colnames(dens) <- "y_dens" ## bz: try renaming the dens column to something else, so that it doesn't have the same name as the data.frame object itself
p<-ggplot()+
geom_histogram(data=data.s, aes(x=data, y=..density..), fill="white", color="black", binwidth=width)+
geom_line(data=dens, aes(x=seq(xmin,xmax,length=1000), y=y_dens), color="blue")+
ggtitle("Aggregated distribution over all data, sex_id ", 1)+ ## bz: changed "sex" to 1 for testing purposes
theme_classic()
print(p)
}
dev.off()
means<-get_draws("rei_id", rei_id, "risk", year_ids=c(2016), gbd_round_id=4, draw_type="exposure") ## bz: changed year_ids to 2016
View(means'')
View(means)
means<-get_draws("rei_id", rei_id, "risk", year_ids=c(2016), gbd_round_id=4, draw_type="exposure") ## bz: changed year_ids to 2016
View(means)
means
sds<-get_draws('modelable_entity_id', sd_meid, "epi", year_ids=c(2016), gbd_round_id=4) ## bz: changed year_ids to 2016
View(sds)
