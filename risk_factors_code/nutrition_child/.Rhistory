# print(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
scalar <- subset(scalar, scalar$age_group_id == 2)
if (hourglass == 0){compiled <- scalar; hourglass = 1}
else {compiled <- rbind(compiled, scalar)}
}
}
compiled$age_group_id <- NULL
done <- merge(final, compiled, by = c("sex_id", "location_id", "year_id"), all = TRUE)
write.csv(done, paste0(workdir, h, "/region_prescaled.csv"), row.names = FALSE)
###now ive merged in scalars, still in cases
###when you apply the scalar you adjust the population, so if i adjust the m/f affected cases and the m/f total pop, then those sums have been adjusted accordingly!
### need to keep adjusted agged pops, in order to divide for super region, these pops dont exist atthose levels
done$prevmean_sum <- done$prevmean_sum*done$scaling_factor
done$lower_ui_sum <- done$lower_ui_sum*done$scaling_factor
done$upper_ui_sum <- done$upper_ui_sum*done$scaling_factor
done$mean_value <- done$mean_value*done$scaling_factor
write.csv(done, paste0(workdir, h, "/region_withscalar.csv"), row.names = FALSE)
###create both-sex aggs
stopwatch = 0
for (b in mainaggs){
bothsex <- aggregate.data.frame(done[[b]], by=list(year_id = done$year_id, location_id = done$location_id), FUN = sum)
names(bothsex)[names(bothsex)=="x"] <- b
if (stopwatch == 0){both <- bothsex; stopwatch = 1}
else {both <- merge(both, bothsex, by=c("location_id", "year_id"), all=TRUE)}
}
both$sex_id <- 3
# # both <- merge(both, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
# for (p in mainaggs){
#   both[[p]] <- both[[p]]/both$mean_value
# }
write.csv(both, paste0(workdir, h, "/region_both.csv"), row.names = FALSE)
###m/f prevs
# for (x in mainaggs[1:3]){
#   done[[x]] <- done[[x]]/done$mean_value
# }
done$scaling_factor <- NULL
end <- rbind(both, done)
write.csv(end, paste0(workdir, "end_region.csv"), row.names = FALSE)
#
}
############this gives me a dataset, per super region, accurately agged up all cases, have total livebirths pop as well (checked by outputting the individual sex agg, adds/matches up)
####still need to do this for
# region (region_id subset)
# sdi quintiles (either location_metadata or pat)
#then adapt sdi quintiles for CGF
View(end)
superlockeeps <- c("location_id", "super_region_id")
#####################
rm(list=ls())
os <- .Platform$OS.type
if (os == "windows") {
j <- "J:/"
} else {
j <- "/snfs1/"
}
######################
datadir <- paste0(j, "Project/Child Growth Failure/Gates_CGF_Viz/forecasting_data/prevalence/")
workdir <- paste0(j, "temp/USER/do/170828_PUSHdataforviz/helena_cbf_prev_locgroupaggs/")
library("readstata13")
#############################################################################################
## I DONT NEED DRAWS, SINCE IVE ALREADY AGGED UP TO COUNTRY BY USING DRAWS. SHOULD BE SAME CONCEPT OF SAME DENOM
############################################################################################# read in helenadata, merge in superregion info
helena <- c("pretermbirth28wks", "pretermbirth37wks", "lowbirthweight2_5kgs")
location_ids <- read.csv(paste0(workdir, "location_metadata_85viz.csv"), header = TRUE, sep = ",")
regionlockeeps <- c("location_id", "region_id")
regionlocs <- location_ids[regionlockeeps]
superlockeeps <- c("location_id", "super_region_id")
superlocs <- location_ids[superlockeeps]
livebirths <- read.csv(paste0(workdir, "livebirths.csv"), header = TRUE, sep = ",")
lbkeeps <- c("location_id", "year_id", "sex_id", "mean_value")
livebirths <- livebirths[lbkeeps]
for (h in helena[1]){
helenadata <- read.csv(paste0(datadir, h, ".csv"), header = TRUE, sep = ",")
helenadata <- subset(helenadata, helenadata$sex_id <2.5)
# source(paste0(j, "temp/central_comp/libraries/current/r/get_location_metadata.R"))
#
# location_ids <- get_location_metadata(location_set_id = 85)
# write.csv(location_ids, paste0(workdir, "location_metadata_85viz.csv"), row.names = FALSE)
# location_ids <- read.csv(paste0(workdir, "location_metadata_85viz.csv"), header = TRUE, sep = ",")
# lockeeps <- c("location_id", "super_region_id")
# location_ids <- location_ids[lockeeps]
merge <- merge(helenadata, regionlocs, by = "location_id", all.x = TRUE)
############################################################################################# read in livebirths, merge into dataset, turn prev-> cases
# source(paste0(j, "temp/central_comp/libraries/current/r/get_covariate_estimates.R"))
#
# livebirths <- get_covariate_estimates(covariate_id = 1106,
#                                       year_id = c(1990, 1995, 2000, 2005, 2010, 2016),
#                                       sex_id = c(1,2,3))
# write.csv(livebirths, paste0(workdir, "livebirths.csv"), row.names = FALSE)
# livebirths <- read.csv(paste0(workdir, "livebirths.csv"), header = TRUE, sep = ",")
# lbkeeps <- c("location_id", "year_id", "sex_id", "mean_value")
# livebirths <- livebirths[lbkeeps]
merge <- merge(merge, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
#########prev --> cases
merge$prevmean_sum <- merge$prevmean_sum*merge$mean_value
merge$lower_ui_sum <- merge$lower_ui_sum*merge$mean_value
merge$upper_ui_sum <- merge$upper_ui_sum*merge$mean_value
# write.csv(merge, paste0(workdir, h, "/region_merge.csv"), row.names = FALSE)
#############################################################################################
list <- unique(merge$region_id)
clock = 0
for (loc in list){
subset <- subset(merge, merge$region_id == loc)
mainaggs <- c("prevmean_sum", "lower_ui_sum", "upper_ui_sum", "mean_value")
loopcount = 0
for (m in mainaggs){
agg <- aggregate.data.frame(subset[[m]], by=list(sex_id = subset$sex_id, year_id = subset$year_id), FUN=sum)
names(agg)[names(agg)=="x"] <- m
if (loopcount == 0){all <- agg; loopcount = 1}
else {all <- merge(all, agg, by=c("sex_id", "year_id"), all=TRUE)}
all$location_id <- loc
}
if (clock == 0){final <- all; clock = 1}
else {final <- rbind(final, all)}
}
#####now i have all regions agged up in case space
# write.csv(final, paste0(workdir, h, "/region.csv"), row.names = FALSE)
# for (agg in mainaggs[1:3]){
#   final[[agg]] <- final[[agg]]/final$mean_value
# }
# write.csv(final, paste0(workdir, h, "/region_rates.csv"), row.names = FALSE)
region <- unique(final$location_id)
regiondir <- paste0(j, "WORK/10_gbd/01_dalynator/02_inputs/region_scalars/35/")
years <- unique(final$year_id)
hourglass = 0
for (r in region){
for (y in years){
scalar <- read.dta13(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
# print(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
scalar <- subset(scalar, scalar$age_group_id == 2)
if (hourglass == 0){compiled <- scalar; hourglass = 1}
else {compiled <- rbind(compiled, scalar)}
}
}
compiled$age_group_id <- NULL
done <- merge(final, compiled, by = c("sex_id", "location_id", "year_id"), all = TRUE)
write.csv(done, paste0(workdir, h, "/region_prescaled.csv"), row.names = FALSE)
###now ive merged in scalars, still in cases
###when you apply the scalar you adjust the population, so if i adjust the m/f affected cases and the m/f total pop, then those sums have been adjusted accordingly!
### need to keep adjusted agged pops, in order to divide for super region, these pops dont exist atthose levels
done$prevmean_sum <- done$prevmean_sum*done$scaling_factor
done$lower_ui_sum <- done$lower_ui_sum*done$scaling_factor
done$upper_ui_sum <- done$upper_ui_sum*done$scaling_factor
done$mean_value <- done$mean_value*done$scaling_factor
write.csv(done, paste0(workdir, h, "/region_withscalar.csv"), row.names = FALSE)
###create both-sex aggs
stopwatch = 0
for (b in mainaggs){
bothsex <- aggregate.data.frame(done[[b]], by=list(year_id = done$year_id, location_id = done$location_id), FUN = sum)
names(bothsex)[names(bothsex)=="x"] <- b
if (stopwatch == 0){both <- bothsex; stopwatch = 1}
else {both <- merge(both, bothsex, by=c("location_id", "year_id"), all=TRUE)}
}
both$sex_id <- 3
# # both <- merge(both, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
# for (p in mainaggs){
#   both[[p]] <- both[[p]]/both$mean_value
# }
write.csv(both, paste0(workdir, h, "/region_both.csv"), row.names = FALSE)
###m/f prevs
# for (x in mainaggs[1:3]){
#   done[[x]] <- done[[x]]/done$mean_value
# }
done$scaling_factor <- NULL
end <- rbind(both, done)
write.csv(end, paste0(workdir, "end_region.csv"), row.names = FALSE)
###end gives me properly aggregated regions in cases. NOW we want to merge in super-region ids to agg to super region
super <- end
super <- merge(super, superlocs, by = "location_id", all.x = TRUE)
superlist <- unique(super$super_region_id)
thing = 0
for (place in superlist){
swath <- subset(super, super$super_region_id == place)
looopspace = 0
for (m in mainaggs){
aggg <- aggregate.data.frame(swath[[m]], by=list(sex_id = swath$sex_id, year_id = swath$year_id), FUN=sum)
names(aggg)[names(aggg)=="x"] <- m
if (looopspace == 0){alll <- aggg; looopspace = 1}
else {alll <- merge(alll, aggg, by=c("sex_id", "year_id"), all=TRUE)}
alll$location_id <- place
}
if (thing == 0){finaal <- alll; thing = 1}
else {finaal <- rbind(finaal, alll)}
}
almostdone <- rbind(end, finaal)
write.csv(almostdone, paste0(workdir, "regionplussuper_incases.csv"), row.names = FALSE)
}
############this gives me a dataset, per super region, accurately agged up all cases, have total livebirths pop as well (checked by outputting the individual sex agg, adds/matches up)
####still need to do this for
# region (region_id subset)
# sdi quintiles (either location_metadata or pat)
#then adapt sdi quintiles for CGF
View(finaal)
#####################
rm(list=ls())
os <- .Platform$OS.type
if (os == "windows") {
j <- "J:/"
} else {
j <- "/snfs1/"
}
######################
datadir <- paste0(j, "Project/Child Growth Failure/Gates_CGF_Viz/forecasting_data/prevalence/")
workdir <- paste0(j, "temp/USER/do/170828_PUSHdataforviz/helena_cbf_prev_locgroupaggs/")
library("readstata13")
#############################################################################################
## I DONT NEED DRAWS, SINCE IVE ALREADY AGGED UP TO COUNTRY BY USING DRAWS. SHOULD BE SAME CONCEPT OF SAME DENOM
############################################################################################# read in helenadata, merge in superregion info
helena <- c("pretermbirth28wks", "pretermbirth37wks", "lowbirthweight2_5kgs")
location_ids <- read.csv(paste0(workdir, "location_metadata_85viz.csv"), header = TRUE, sep = ",")
regionlockeeps <- c("location_id", "region_id")
regionlocs <- location_ids[regionlockeeps]
superlockeeps <- c("location_id", "super_region_id")
superlocs <- location_ids[superlockeeps]
livebirths <- read.csv(paste0(workdir, "livebirths.csv"), header = TRUE, sep = ",")
lbkeeps <- c("location_id", "year_id", "sex_id", "mean_value")
livebirths <- livebirths[lbkeeps]
for (h in helena[1]){
helenadata <- read.csv(paste0(datadir, h, ".csv"), header = TRUE, sep = ",")
helenadata <- subset(helenadata, helenadata$sex_id <2.5)
# source(paste0(j, "temp/central_comp/libraries/current/r/get_location_metadata.R"))
#
# location_ids <- get_location_metadata(location_set_id = 85)
# write.csv(location_ids, paste0(workdir, "location_metadata_85viz.csv"), row.names = FALSE)
# location_ids <- read.csv(paste0(workdir, "location_metadata_85viz.csv"), header = TRUE, sep = ",")
# lockeeps <- c("location_id", "super_region_id")
# location_ids <- location_ids[lockeeps]
merge <- merge(helenadata, regionlocs, by = "location_id", all.x = TRUE)
############################################################################################# read in livebirths, merge into dataset, turn prev-> cases
# source(paste0(j, "temp/central_comp/libraries/current/r/get_covariate_estimates.R"))
#
# livebirths <- get_covariate_estimates(covariate_id = 1106,
#                                       year_id = c(1990, 1995, 2000, 2005, 2010, 2016),
#                                       sex_id = c(1,2,3))
# write.csv(livebirths, paste0(workdir, "livebirths.csv"), row.names = FALSE)
# livebirths <- read.csv(paste0(workdir, "livebirths.csv"), header = TRUE, sep = ",")
# lbkeeps <- c("location_id", "year_id", "sex_id", "mean_value")
# livebirths <- livebirths[lbkeeps]
merge <- merge(merge, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
#########prev --> cases
merge$prevmean_sum <- merge$prevmean_sum*merge$mean_value
merge$lower_ui_sum <- merge$lower_ui_sum*merge$mean_value
merge$upper_ui_sum <- merge$upper_ui_sum*merge$mean_value
# write.csv(merge, paste0(workdir, h, "/region_merge.csv"), row.names = FALSE)
#############################################################################################
list <- unique(merge$region_id)
clock = 0
for (loc in list){
subset <- subset(merge, merge$region_id == loc)
mainaggs <- c("prevmean_sum", "lower_ui_sum", "upper_ui_sum", "mean_value")
loopcount = 0
for (m in mainaggs){
agg <- aggregate.data.frame(subset[[m]], by=list(sex_id = subset$sex_id, year_id = subset$year_id), FUN=sum)
names(agg)[names(agg)=="x"] <- m
if (loopcount == 0){all <- agg; loopcount = 1}
else {all <- merge(all, agg, by=c("sex_id", "year_id"), all=TRUE)}
all$location_id <- loc
}
if (clock == 0){final <- all; clock = 1}
else {final <- rbind(final, all)}
}
#####now i have all regions agged up in case space
# write.csv(final, paste0(workdir, h, "/region.csv"), row.names = FALSE)
# for (agg in mainaggs[1:3]){
#   final[[agg]] <- final[[agg]]/final$mean_value
# }
# write.csv(final, paste0(workdir, h, "/region_rates.csv"), row.names = FALSE)
region <- unique(final$location_id)
regiondir <- paste0(j, "WORK/10_gbd/01_dalynator/02_inputs/region_scalars/35/")
years <- unique(final$year_id)
hourglass = 0
for (r in region){
for (y in years){
scalar <- read.dta13(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
# print(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
scalar <- subset(scalar, scalar$age_group_id == 2)
if (hourglass == 0){compiled <- scalar; hourglass = 1}
else {compiled <- rbind(compiled, scalar)}
}
}
compiled$age_group_id <- NULL
done <- merge(final, compiled, by = c("sex_id", "location_id", "year_id"), all = TRUE)
write.csv(done, paste0(workdir, h, "/region_prescaled.csv"), row.names = FALSE)
###now ive merged in scalars, still in cases
###when you apply the scalar you adjust the population, so if i adjust the m/f affected cases and the m/f total pop, then those sums have been adjusted accordingly!
### need to keep adjusted agged pops, in order to divide for super region, these pops dont exist atthose levels
done$prevmean_sum <- done$prevmean_sum*done$scaling_factor
done$lower_ui_sum <- done$lower_ui_sum*done$scaling_factor
done$upper_ui_sum <- done$upper_ui_sum*done$scaling_factor
done$mean_value <- done$mean_value*done$scaling_factor
write.csv(done, paste0(workdir, h, "/region_withscalar.csv"), row.names = FALSE)
###create both-sex aggs
stopwatch = 0
for (b in mainaggs){
bothsex <- aggregate.data.frame(done[[b]], by=list(year_id = done$year_id, location_id = done$location_id), FUN = sum)
names(bothsex)[names(bothsex)=="x"] <- b
if (stopwatch == 0){both <- bothsex; stopwatch = 1}
else {both <- merge(both, bothsex, by=c("location_id", "year_id"), all=TRUE)}
}
both$sex_id <- 3
# # both <- merge(both, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
# for (p in mainaggs){
#   both[[p]] <- both[[p]]/both$mean_value
# }
write.csv(both, paste0(workdir, h, "/region_both.csv"), row.names = FALSE)
###m/f prevs
# for (x in mainaggs[1:3]){
#   done[[x]] <- done[[x]]/done$mean_value
# }
done$scaling_factor <- NULL
end <- rbind(both, done)
write.csv(end, paste0(workdir, "end_region.csv"), row.names = FALSE)
###end gives me properly aggregated regions in cases. NOW we want to merge in super-region ids to agg to super region
super <- end
super <- merge(super, superlocs, by = "location_id", all.x = TRUE)
superlist <- unique(super$super_region_id)
thing = 0
for (place in superlist){
swath <- subset(super, super$super_region_id == place)
looopspace = 0
for (m in mainaggs){
aggg <- aggregate.data.frame(swath[[m]], by=list(sex_id = swath$sex_id, year_id = swath$year_id), FUN=sum)
names(aggg)[names(aggg)=="x"] <- m
if (looopspace == 0){alll <- aggg; looopspace = 1}
else {alll <- merge(alll, aggg, by=c("sex_id", "year_id"), all=TRUE)}
alll$location_id <- place
}
if (thing == 0){finaal <- alll; thing = 1}
else {finaal <- rbind(finaal, alll)}
}
write.csv(finaal, paste0(workdir, "supersincases.csv"), row.names = FALSE)
almostdone <- rbind(end, finaal)
# write.csv(almostdone, paste0(workdir, "regionplussuper_incases.csv"), row.names = FALSE)
#####this gives me accurately agged superregions! in cases -- NOW should just have to sum all superregions for global
bumbershoot = 0
for (m in mainaggs){
agggg <- aggregate.data.frame(finaal[[m]], by=list(sex_id = finaal$sex_id, year_id = finaal$year_id), FUN=sum)
names(agggg)[names(agggg)=="x"] <- m
if (bumbershoot == 0){allll <- agggg; bumbershoot = 1}
else {allll <- merge(allll, agggg, by=c("sex_id", "year_id"), all=TRUE)}
allll$location_id <- 1
}
write.csv(allll, paste0(workdir, "globalcases.csv"), row.names = FALSE)
nowdone <- rbind(almostdone, allll)
write.csv(nowdone, paste0(workdir, "finalfinal.csv"), row.names = FALSE)
}
############this gives me a dataset, per super region, accurately agged up all cases, have total livebirths pop as well (checked by outputting the individual sex agg, adds/matches up)
####still need to do this for
# region (region_id subset)
# sdi quintiles (either location_metadata or pat)
#then adapt sdi quintiles for CGF
#####################
rm(list=ls())
os <- .Platform$OS.type
if (os == "windows") {
j <- "J:/"
} else {
j <- "/snfs1/"
}
######################
datadir <- paste0(j, "Project/Child Growth Failure/Gates_CGF_Viz/forecasting_data/prevalence/")
workdir <- paste0(j, "temp/USER/do/170828_PUSHdataforviz/helena_cbf_prev_locgroupaggs/")
library("readstata13")
#############################################################################################
## I DONT NEED DRAWS, SINCE IVE ALREADY AGGED UP TO COUNTRY BY USING DRAWS. SHOULD BE SAME CONCEPT OF SAME DENOM
############################################################################################# read in helenadata, merge in superregion info
helena <- c("pretermbirth28wks", "pretermbirth37wks", "lowbirthweight2_5kgs")
location_ids <- read.csv(paste0(workdir, "location_metadata_85viz.csv"), header = TRUE, sep = ",")
regionlockeeps <- c("location_id", "region_id")
regionlocs <- location_ids[regionlockeeps]
superlockeeps <- c("location_id", "super_region_id")
superlocs <- location_ids[superlockeeps]
livebirths <- read.csv(paste0(workdir, "livebirths.csv"), header = TRUE, sep = ",")
lbkeeps <- c("location_id", "year_id", "sex_id", "mean_value")
livebirths <- livebirths[lbkeeps]
for (h in helena[1]){
helenadata <- read.csv(paste0(datadir, h, ".csv"), header = TRUE, sep = ",")
helenadata <- subset(helenadata, helenadata$sex_id <2.5)
# source(paste0(j, "temp/central_comp/libraries/current/r/get_location_metadata.R"))
#
# location_ids <- get_location_metadata(location_set_id = 85)
# write.csv(location_ids, paste0(workdir, "location_metadata_85viz.csv"), row.names = FALSE)
# location_ids <- read.csv(paste0(workdir, "location_metadata_85viz.csv"), header = TRUE, sep = ",")
# lockeeps <- c("location_id", "super_region_id")
# location_ids <- location_ids[lockeeps]
merge <- merge(helenadata, regionlocs, by = "location_id", all.x = TRUE)
############################################################################################# read in livebirths, merge into dataset, turn prev-> cases
# source(paste0(j, "temp/central_comp/libraries/current/r/get_covariate_estimates.R"))
#
# livebirths <- get_covariate_estimates(covariate_id = 1106,
#                                       year_id = c(1990, 1995, 2000, 2005, 2010, 2016),
#                                       sex_id = c(1,2,3))
# write.csv(livebirths, paste0(workdir, "livebirths.csv"), row.names = FALSE)
# livebirths <- read.csv(paste0(workdir, "livebirths.csv"), header = TRUE, sep = ",")
# lbkeeps <- c("location_id", "year_id", "sex_id", "mean_value")
# livebirths <- livebirths[lbkeeps]
merge <- merge(merge, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
#########prev --> cases
merge$prevmean_sum <- merge$prevmean_sum*merge$mean_value
merge$lower_ui_sum <- merge$lower_ui_sum*merge$mean_value
merge$upper_ui_sum <- merge$upper_ui_sum*merge$mean_value
# write.csv(merge, paste0(workdir, h, "/region_merge.csv"), row.names = FALSE)
#############################################################################################
list <- unique(merge$region_id)
clock = 0
for (loc in list){
subset <- subset(merge, merge$region_id == loc)
mainaggs <- c("prevmean_sum", "lower_ui_sum", "upper_ui_sum", "mean_value")
loopcount = 0
for (m in mainaggs){
agg <- aggregate.data.frame(subset[[m]], by=list(sex_id = subset$sex_id, year_id = subset$year_id), FUN=sum)
names(agg)[names(agg)=="x"] <- m
if (loopcount == 0){all <- agg; loopcount = 1}
else {all <- merge(all, agg, by=c("sex_id", "year_id"), all=TRUE)}
all$location_id <- loc
}
if (clock == 0){final <- all; clock = 1}
else {final <- rbind(final, all)}
}
#####now i have all regions agged up in case space
# write.csv(final, paste0(workdir, h, "/region.csv"), row.names = FALSE)
# for (agg in mainaggs[1:3]){
#   final[[agg]] <- final[[agg]]/final$mean_value
# }
# write.csv(final, paste0(workdir, h, "/region_rates.csv"), row.names = FALSE)
region <- unique(final$location_id)
regiondir <- paste0(j, "WORK/10_gbd/01_dalynator/02_inputs/region_scalars/35/")
years <- unique(final$year_id)
hourglass = 0
for (r in region){
for (y in years){
scalar <- read.dta13(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
# print(paste0(regiondir, r, "_", y, "_scaling_pop.dta"))
scalar <- subset(scalar, scalar$age_group_id == 2)
if (hourglass == 0){compiled <- scalar; hourglass = 1}
else {compiled <- rbind(compiled, scalar)}
}
}
compiled$age_group_id <- NULL
done <- merge(final, compiled, by = c("sex_id", "location_id", "year_id"), all = TRUE)
write.csv(done, paste0(workdir, h, "/region_prescaled.csv"), row.names = FALSE)
###now ive merged in scalars, still in cases
###when you apply the scalar you adjust the population, so if i adjust the m/f affected cases and the m/f total pop, then those sums have been adjusted accordingly!
### need to keep adjusted agged pops, in order to divide for super region, these pops dont exist atthose levels
done$prevmean_sum <- done$prevmean_sum*done$scaling_factor
done$lower_ui_sum <- done$lower_ui_sum*done$scaling_factor
done$upper_ui_sum <- done$upper_ui_sum*done$scaling_factor
done$mean_value <- done$mean_value*done$scaling_factor
write.csv(done, paste0(workdir, h, "/region_withscalar.csv"), row.names = FALSE)
###create both-sex aggs
stopwatch = 0
for (b in mainaggs){
bothsex <- aggregate.data.frame(done[[b]], by=list(year_id = done$year_id, location_id = done$location_id), FUN = sum)
names(bothsex)[names(bothsex)=="x"] <- b
if (stopwatch == 0){both <- bothsex; stopwatch = 1}
else {both <- merge(both, bothsex, by=c("location_id", "year_id"), all=TRUE)}
}
both$sex_id <- 3
# # both <- merge(both, livebirths, by = c("location_id", "year_id", "sex_id"), all.x = TRUE)
# for (p in mainaggs){
#   both[[p]] <- both[[p]]/both$mean_value
# }
write.csv(both, paste0(workdir, h, "/region_both.csv"), row.names = FALSE)
###m/f prevs
# for (x in mainaggs[1:3]){
#   done[[x]] <- done[[x]]/done$mean_value
# }
done$scaling_factor <- NULL
end <- rbind(both, done)
write.csv(end, paste0(workdir, "end_region.csv"), row.names = FALSE)
###end gives me properly aggregated regions in cases. NOW we want to merge in super-region ids to agg to super region
super <- end
super <- merge(super, superlocs, by = "location_id", all.x = TRUE)
superlist <- unique(super$super_region_id)
thing = 0
for (place in superlist){
swath <- subset(super, super$super_region_id == place)
looopspace = 0
for (m in mainaggs){
aggg <- aggregate.data.frame(swath[[m]], by=list(sex_id = swath$sex_id, year_id = swath$year_id), FUN=sum)
names(aggg)[names(aggg)=="x"] <- m
if (looopspace == 0){alll <- aggg; looopspace = 1}
else {alll <- merge(alll, aggg, by=c("sex_id", "year_id"), all=TRUE)}
alll$location_id <- place
}
if (thing == 0){finaal <- alll; thing = 1}
else {finaal <- rbind(finaal, alll)}
}
write.csv(finaal, paste0(workdir, "supersincases.csv"), row.names = FALSE)
almostdone <- rbind(end, finaal)
# write.csv(almostdone, paste0(workdir, "regionplussuper_incases.csv"), row.names = FALSE)
#####this gives me accurately agged superregions! in cases -- NOW should just have to sum all superregions for global
bumbershoot = 0
for (m in mainaggs){
agggg <- aggregate.data.frame(finaal[[m]], by=list(sex_id = finaal$sex_id, year_id = finaal$year_id), FUN=sum)
names(agggg)[names(agggg)=="x"] <- m
if (bumbershoot == 0){allll <- agggg; bumbershoot = 1}
else {allll <- merge(allll, agggg, by=c("sex_id", "year_id"), all=TRUE)}
allll$location_id <- 1
}
write.csv(allll, paste0(workdir, "globalcases.csv"), row.names = FALSE)
nowdone <- rbind(almostdone, allll)
for (stuff in mainaggs[1:3]){
nowdone[[stuff]] <- nowdone[[stuff]]/nowdone$mean_value
}
write.csv(nowdone, paste0(workdir, "finalfinal.csv"), row.names = FALSE)
}
############this gives me a dataset, per super region, accurately agged up all cases, have total livebirths pop as well (checked by outputting the individual sex agg, adds/matches up)
####still need to do this for
# region (region_id subset)
# sdi quintiles (either location_metadata or pat)
#then adapt sdi quintiles for CGF
